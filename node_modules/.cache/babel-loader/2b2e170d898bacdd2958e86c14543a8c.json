{"remainingRequest":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/babel-loader/lib/index.js!/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Yohan/Dropbox/Work/DnG/webpage/src/components/FileUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/src/components/FileUpload.vue","mtime":1549961074000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"file-upload\",\n  props: {\n    type: String,\n    inputName: String,\n    inputValue: String,\n    placeholder: String,\n    multiple: Boolean,\n    btnIcon: String,\n    withButton: Boolean\n  },\n  data: function data() {\n    return {\n      inputModel: null,\n      inputModel2: null,\n      imageRegular: require(\"@/assets/img/image_placeholder.jpg\"),\n      imageCircle: require(\"@/assets/img/placeholder.jpg\"),\n      hasImage: false\n    };\n  },\n  methods: {\n    onFileChange: function onFileChange(e) {\n      var _this = this;\n\n      e.preventDefault();\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      var file = files[0];\n      var reader = new FileReader();\n      var vm = this;\n\n      reader.onload = function () {\n        if (_this.type === \"image-circle\") {\n          vm.imageCircle = reader.result;\n        } else {\n          vm.imageRegular = reader.result;\n        }\n      };\n\n      reader.readAsDataURL(file);\n      vm.hasImage = true;\n    },\n    removeImage: function removeImage() {\n      if (this.type === \"image-circle\") {\n        this.imageCircle = require(\"@/assets/img/placeholder.jpg\");\n      } else {\n        this.imageRegular = require(\"@/assets/img/image_placeholder.jpg\");\n      }\n\n      this.hasImage = false;\n    },\n    triggerInputFileHidden: function triggerInputFileHidden(hiddenID) {\n      var element = document.getElementById(hiddenID);\n      element.click();\n    },\n    newValue: function newValue(visibleID, hiddenID) {\n      var element = document.getElementById(hiddenID);\n      var visibleElem = document.getElementById(visibleID);\n      var elemValue = element.value;\n      var filename = elemValue.replace(/C:\\\\fakepath\\\\/i, \"\");\n      visibleElem.value = filename;\n    },\n    newValueMultiple: function newValueMultiple(visibleID, hiddenID) {\n      var element = document.getElementById(hiddenID);\n      var visibleElem = document.getElementById(visibleID);\n      var names = \"\";\n\n      for (var i = 0; i < element.files.length; ++i) {\n        if (i < element.files.length - 1) {\n          names += element.files.item(i).name + \", \";\n        } else {\n          names += element.files.item(i).name;\n        }\n      }\n\n      visibleElem.value = names;\n    }\n  }\n};",{"version":3,"sources":["FileUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <span>\n    <template v-if=\"type === 'image-regular' || type === 'image-circle'\">\n      <div class=\"file-input\" :class=\"type\">\n        <div class=\"image-container\">\n          <img :src=\"imageRegular\" v-if=\"type === 'image-regular'\" title=\"\" />\n          <img :src=\"imageCircle\" v-else title=\"\" />\n        </div>\n        <div class=\"button-container\">\n          <md-button\n            class=\"md-danger md-round\"\n            @click=\"removeImage\"\n            v-if=\"hasImage\"\n            ><i class=\"fa fa-times\"></i>Remove</md-button\n          >\n          <md-button class=\"md-success md-round md-fileinput\">\n            <template v-if=\"type === 'image-regular' && !hasImage\"\n              >Select image</template\n            >\n            <template v-else-if=\"type === 'image-circle' && !hasImage\"\n              >Add photo</template\n            >\n            <template v-else\n              >Change</template\n            >\n            <input type=\"file\" :name=\"type\" @change=\"onFileChange\" />\n          </md-button>\n        </div>\n      </div>\n    </template>\n\n    <template v-else-if=\"type === 'input'\">\n      <template v-if=\"!withButton\">\n        <md-field class=\"form-file-upload form-file-simple\">\n          <md-input\n            v-model=\"inputModel\"\n            :id=\"inputName + 'Visible'\"\n            @click=\"triggerInputFileHidden(inputName + 'Hidden')\"\n            :placeholder=\"placeholder\"\n          ></md-input>\n          <input\n            type=\"file\"\n            :id=\"inputName + 'Hidden'\"\n            @change=\"newValue(inputName + 'Visible', inputName + 'Hidden')\"\n          />\n        </md-field>\n      </template>\n      <template v-if=\"withButton\">\n        <div class=\"form-file-group\">\n          <md-field class=\"form-file-upload form-file-simple\">\n            <md-input\n              v-model=\"inputModel\"\n              :id=\"inputName + 'Visible'\"\n              :multiple=\"multiple\"\n              @click=\"triggerInputFileHidden(inputName + 'Hidden')\"\n              :placeholder=\"placeholder\"\n            ></md-input>\n            <input\n              type=\"file\"\n              :id=\"inputName + 'Hidden'\"\n              @change=\"newValue(inputName + 'Visible', inputName + 'Hidden')\"\n              v-if=\"!multiple\"\n            />\n            <input\n              type=\"file\"\n              :id=\"inputName + 'Hidden'\"\n              :multiple=\"multiple\"\n              @change=\"\n                newValueMultiple(inputName + 'Visible', inputName + 'Hidden')\n              \"\n              v-else\n            />\n          </md-field>\n          <md-button\n            class=\"md-success md-round md-just-icon\"\n            @click=\"triggerInputFileHidden(inputName + 'Hidden')\"\n            ><md-icon>{{ btnIcon }}</md-icon></md-button\n          >\n        </div>\n      </template>\n    </template>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"file-upload\",\n  props: {\n    type: String,\n    inputName: String,\n    inputValue: String,\n    placeholder: String,\n    multiple: Boolean,\n    btnIcon: String,\n    withButton: Boolean\n  },\n  data() {\n    return {\n      inputModel: null,\n      inputModel2: null,\n      imageRegular: require(\"@/assets/img/image_placeholder.jpg\"),\n      imageCircle: require(\"@/assets/img/placeholder.jpg\"),\n      hasImage: false\n    };\n  },\n  methods: {\n    onFileChange(e) {\n      e.preventDefault();\n      let files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      let file = files[0];\n      let reader = new FileReader();\n      let vm = this;\n      reader.onload = () => {\n        if (this.type === \"image-circle\") {\n          vm.imageCircle = reader.result;\n        } else {\n          vm.imageRegular = reader.result;\n        }\n      };\n      reader.readAsDataURL(file);\n      vm.hasImage = true;\n    },\n    removeImage: function() {\n      if (this.type === \"image-circle\") {\n        this.imageCircle = require(\"@/assets/img/placeholder.jpg\");\n      } else {\n        this.imageRegular = require(\"@/assets/img/image_placeholder.jpg\");\n      }\n      this.hasImage = false;\n    },\n    triggerInputFileHidden(hiddenID) {\n      let element = document.getElementById(hiddenID);\n      element.click();\n    },\n    newValue(visibleID, hiddenID) {\n      let element = document.getElementById(hiddenID);\n      let visibleElem = document.getElementById(visibleID);\n      let elemValue = element.value;\n      let filename = elemValue.replace(/C:\\\\fakepath\\\\/i, \"\");\n\n      visibleElem.value = filename;\n    },\n    newValueMultiple(visibleID, hiddenID) {\n      let element = document.getElementById(hiddenID);\n      let visibleElem = document.getElementById(visibleID);\n      let names = \"\";\n      for (var i = 0; i < element.files.length; ++i) {\n        if (i < element.files.length - 1) {\n          names += element.files.item(i).name + \", \";\n        } else {\n          names += element.files.item(i).name;\n        }\n      }\n\n      visibleElem.value = names;\n    }\n  }\n};\n</script>\n\n<style lang=\"css\"></style>\n"],"sourceRoot":"src/components"}]}