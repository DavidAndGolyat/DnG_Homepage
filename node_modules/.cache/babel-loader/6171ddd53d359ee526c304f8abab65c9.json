{"remainingRequest":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/babel-loader/lib/index.js!/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Yohan/Dropbox/Work/DnG/webpage/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/src/views/Login.vue","mtime":1556850917103},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { LoginCard } from \"@/components\";\nimport Mixins from \"@/plugins/basicMixins\";\nimport { validationMixin } from \"vuelidate\";\nimport { required, minLength, maxLength } from \"vuelidate/lib/validators\";\nimport axios from \"axios\";\nimport codes from \"../assets/client_codes.json\";\nexport default {\n  mixins: [Mixins.HeaderImage, validationMixin],\n  name: \"login\",\n  components: {\n    LoginCard: LoginCard\n  },\n  bodyClass: \"login-page\",\n  data: function data() {\n    return {\n      image: require(\"@/assets/img/DnG/david_donatello_bg.jpg\"),\n      form: {\n        code: null\n      },\n      error: false,\n      client_name: null\n    };\n  },\n  validations: {\n    form: {\n      code: {\n        required: required,\n        minLength: minLength(8),\n        maxLength: maxLength(8)\n      }\n    }\n  },\n  methods: {\n    submit: function submit() {\n      var code = this.form.code;\n      var json = codes; // Validation\n\n      this.$v.form.$touch();\n      if (this.$v.form.$error) return; // Match the code with code file\n\n      var found = json.find(function (element) {\n        return element.code == code.toUpperCase();\n      });\n\n      if (found) {\n        this.client_name = found.client_name;\n        alert(\"Welcome! \" + this.client_name);\n        this.$router.push({\n          name: \"briefingform\",\n          params: {\n            code: this.client_name\n          }\n        });\n      } else {\n        alert(\"Invalid code!\");\n      }\n    },\n    getValidationClass: function getValidationClass(fieldName) {\n      var field = this.$v.form[fieldName];\n\n      if (field) {\n        return {\n          \"md-invalid\": field.$invalid && field.$dirty\n        };\n      }\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,SAAA,SAAA,QAAA,cAAA;AACA,OAAA,MAAA,MAAA,uBAAA;AACA,SAAA,eAAA,QAAA,WAAA;AACA,SAAA,QAAA,EAAA,SAAA,EAAA,SAAA,QAAA,0BAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,WAAA,EAAA,eAAA,CADA;AAEA,EAAA,IAAA,EAAA,OAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAHA;AAMA,EAAA,SAAA,EAAA,YANA;AAOA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,OAAA,CAAA,yCAAA,CADA;AAEA,MAAA,IAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OAFA;AAKA,MAAA,KAAA,EAAA,KALA;AAMA,MAAA,WAAA,EAAA;AANA,KAAA;AAAA,GAPA;AAeA,EAAA,WAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA,QADA;AAEA,QAAA,SAAA,EAAA,SAAA,CAAA,CAAA,CAFA;AAGA,QAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAHA;AADA;AADA,GAfA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA,CAAA,IAAA;AACA,UAAA,IAAA,GAAA,KAAA,CAFA,CAGA;;AACA,WAAA,EAAA,CAAA,IAAA,CAAA,MAAA;AACA,UAAA,KAAA,EAAA,CAAA,IAAA,CAAA,MAAA,EAAA,OALA,CAOA;;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,IAAA,CAAA,UAAA,OAAA,EAAA;AACA,eAAA,OAAA,CAAA,IAAA,IAAA,IAAA,CAAA,WAAA,EAAA;AACA,OAFA,CAAA;;AAIA,UAAA,KAAA,EAAA;AACA,aAAA,WAAA,GAAA,KAAA,CAAA,WAAA;AACA,QAAA,KAAA,CAAA,cAAA,KAAA,WAAA,CAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,cADA;AAEA,UAAA,MAAA,EAAA;AAAA,YAAA,IAAA,EAAA,KAAA;AAAA;AAFA,SAAA;AAIA,OAPA,MAOA;AACA,QAAA,KAAA,CAAA,eAAA,CAAA;AACA;AACA,KAvBA;AAwBA,IAAA,kBAxBA,8BAwBA,SAxBA,EAwBA;AACA,UAAA,KAAA,GAAA,KAAA,EAAA,CAAA,IAAA,CAAA,SAAA,CAAA;;AACA,UAAA,KAAA,EAAA;AACA,eAAA;AACA,wBAAA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA;AADA,SAAA;AAGA;AACA;AA/BA;AAxBA,CAAA","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"section page-header header-filter\" :style=\"headerStyle\">\n      <div class=\"container\">\n        <div class=\"md-layout\">\n          <form novalidate class=\"md-layout\" @submit.prevent=\"submit\">\n            <div\n              class=\"md-layout-item md-size-33 md-small-size-66 md-xsmall-size-100 md-medium-size-40 mx-auto\"\n            >\n              <login-card header-color=\"info\">\n                <h3 slot=\"title\" class=\"card-title\">Briefing Form</h3>\n                <h4 slot=\"title\" class=\"card-title\">Log in using the code</h4>\n                <div class=\"alert alert-danger\" v-if=\"error\">{{ error }}</div>\n                <md-field :class=\"getValidationClass('code')\" slot=\"inputs\">\n                  <md-icon>fingerprint</md-icon>\n                  <label>Client Code...</label>\n                  <md-input name=\"code\" id=\"code\" v-model=\"form.code\"></md-input>\n                  <span class=\"md-error\" v-if=\"!$v.form.code.required\">The code is required</span>\n                  <span class=\"md-error\" v-if=\"!$v.form.code.minLength\">Invalid code</span>\n                  <span class=\"md-error\" v-if=\"!$v.form.code.maxLength\">Invalid code</span>\n                </md-field>\n                <md-button type=\"submit\" slot=\"footer\" class=\"md-simple md-info md-lg\">Log In</md-button>\n              </login-card>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { LoginCard } from \"@/components\";\nimport Mixins from \"@/plugins/basicMixins\";\nimport { validationMixin } from \"vuelidate\";\nimport { required, minLength, maxLength } from \"vuelidate/lib/validators\";\nimport axios from \"axios\";\nimport codes from \"../assets/client_codes.json\";\n\nexport default {\n  mixins: [Mixins.HeaderImage, validationMixin],\n  name: \"login\",\n  components: {\n    LoginCard\n  },\n  bodyClass: \"login-page\",\n  data: () => ({\n    image: require(\"@/assets/img/DnG/david_donatello_bg.jpg\"),\n    form: {\n      code: null\n    },\n    error: false,\n    client_name: null\n  }),\n  validations: {\n    form: {\n      code: {\n        required,\n        minLength: minLength(8),\n        maxLength: maxLength(8)\n      }\n    }\n  },\n  methods: {\n    submit() {\n      var code = this.form.code;\n      var json = codes;\n      // Validation\n      this.$v.form.$touch();\n      if (this.$v.form.$error) return;\n\n      // Match the code with code file\n      var found = json.find(function(element) {\n        return element.code == code.toUpperCase();\n      });\n\n      if (found) {\n        this.client_name = found.client_name;\n        alert(\"Welcome! \" + this.client_name);\n        this.$router.push({\n          name: \"briefingform\",\n          params: { code: this.client_name }\n        });\n      } else {\n        alert(\"Invalid code!\");\n      }\n    },\n    getValidationClass(fieldName) {\n      const field = this.$v.form[fieldName];\n      if (field) {\n        return {\n          \"md-invalid\": field.$invalid && field.$dirty\n        };\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>\n"],"sourceRoot":"src/views"}]}