{"remainingRequest":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/babel-loader/lib/index.js!/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Yohan/Dropbox/Work/DnG/webpage/src/components/InfoAreas.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/src/components/InfoAreas.vue","mtime":1549961074000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"info-areas\",\n  props: {\n    textCenter: Boolean,\n    textRight: Boolean,\n    textLeft: Boolean,\n    infoHorizontal: Boolean,\n    iconColor: String,\n    icon: String\n  },\n  computed: {\n    infoColor: function infoColor() {\n      return this.iconColor ? \"icon-\".concat(this.iconColor) : \"\";\n    }\n  }\n};",{"version":3,"sources":["InfoAreas.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA,OADA;AAEA,IAAA,SAAA,EAAA,OAFA;AAGA,IAAA,QAAA,EAAA,OAHA;AAIA,IAAA,cAAA,EAAA,OAJA;AAKA,IAAA,SAAA,EAAA,MALA;AAMA,IAAA,IAAA,EAAA;AANA,GAFA;AAUA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,SAAA,kBAAA,KAAA,SAAA,IAAA,EAAA;AACA;AAHA;AAVA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"info\"\n    :class=\"{\n      'info-horizontal': infoHorizontal,\n      'text-right': textRight,\n      'text-left': textLeft,\n      'text-center': textCenter\n    }\"\n  >\n    <div class=\"icon\" :class=\"infoColor\">\n      <md-icon>{{ icon }}</md-icon>\n    </div>\n    <template v-if=\"!infoHorizontal\">\n      <slot name=\"title\"></slot>\n      <slot name=\"content\"></slot>\n    </template>\n    <template v-else>\n      <div class=\"description\">\n        <slot name=\"title\"></slot>\n        <slot name=\"content\"></slot>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"info-areas\",\n  props: {\n    textCenter: Boolean,\n    textRight: Boolean,\n    textLeft: Boolean,\n    infoHorizontal: Boolean,\n    iconColor: String,\n    icon: String\n  },\n  computed: {\n    infoColor() {\n      return this.iconColor ? `icon-${this.iconColor}` : \"\";\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\"></style>\n"],"sourceRoot":"src/components"}]}