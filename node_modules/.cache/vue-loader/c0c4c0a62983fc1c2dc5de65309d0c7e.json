{"remainingRequest":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Yohan/Dropbox/Work/DnG/webpage/src/components/cards/RotatingCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/src/components/cards/RotatingCard.vue","mtime":1549961074000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yohan/Dropbox/Work/DnG/webpage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"rotating-card\",\n  props: {\n    frontCardImage: String,\n    backCardImage: String,\n    cardClass: String,\n    cardBg: String,\n    layerBackground: Boolean,\n    manualRotate: Boolean,\n    manualRotateState: Boolean\n  },\n  computed: {\n    cardColor() {\n      return this.cardBg ? `bg-${this.cardBg}` : \"\";\n    }\n  },\n  methods: {\n    bgFrontFullCards(frontCardImage) {\n      if (this.frontCardImage) {\n        return {\n          backgroundImage: `url(${frontCardImage})`\n        };\n      }\n    },\n    bgBackFullCards(backCardImage) {\n      if (this.backCardImage) {\n        return {\n          backgroundImage: `url(${backCardImage})`\n        };\n      }\n    }\n  }\n};\n",{"version":3,"sources":["RotatingCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RotatingCard.vue","sourceRoot":"src/components/cards","sourcesContent":["<template>\n  <div\n    class=\"rotating-card-container\"\n    :class=\"{ 'manual-flip': manualRotate, hover: manualRotateState }\"\n  >\n    <md-card class=\"md-card-rotate\" :class=\"[cardClass, cardColor]\">\n      <div\n        class=\"front\"\n        :class=\"{ 'front-background': layerBackground }\"\n        :style=\"bgFrontFullCards(frontCardImage)\"\n      >\n        <md-card-content v-if=\"$slots.frontRotateCardContent\">\n          <slot name=\"frontRotateCardContent\"></slot>\n        </md-card-content>\n        <md-card-actions v-if=\"$slots.frontCardAction\">\n          <slot name=\"frontCardAction\"></slot>\n        </md-card-actions>\n      </div>\n\n      <div\n        class=\"back\"\n        :class=\"{ 'back-background': layerBackground }\"\n        :style=\"bgBackFullCards(backCardImage)\"\n      >\n        <md-card-content v-if=\"$slots.backRotateCardContent\">\n          <slot name=\"backRotateCardContent\"></slot>\n        </md-card-content>\n      </div>\n    </md-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"rotating-card\",\n  props: {\n    frontCardImage: String,\n    backCardImage: String,\n    cardClass: String,\n    cardBg: String,\n    layerBackground: Boolean,\n    manualRotate: Boolean,\n    manualRotateState: Boolean\n  },\n  computed: {\n    cardColor() {\n      return this.cardBg ? `bg-${this.cardBg}` : \"\";\n    }\n  },\n  methods: {\n    bgFrontFullCards(frontCardImage) {\n      if (this.frontCardImage) {\n        return {\n          backgroundImage: `url(${frontCardImage})`\n        };\n      }\n    },\n    bgBackFullCards(backCardImage) {\n      if (this.backCardImage) {\n        return {\n          backgroundImage: `url(${backCardImage})`\n        };\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\"></style>\n"]}]}